/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * ðŸ“† Useful user-centric model to play around with
 */
export interface CalendarEventCollection {
  $schema?: string;
  items: CalendarEvent[];
  [k: string]: unknown;
}
export interface CalendarEvent {
  /**
   * Description about the event
   */
  description?: string;
  /**
   * When is it (natural language)
   *
   * If this is filled in manually, can be used (together with some variable context) to determine the rules and exact fire date times.
   */
  when?: string;
  isRecurring?: string;
  /**
   * When it should be fired. Easy to sort on this
   */
  fireDatetime?: string;
  /**
   * See https://crontab.guru
   */
  cronRule?: string;
  scheduleVirtualMeetingDialIn?: string;
  /**
   * scheduleOnFire
   */
  scheduleOnFire?: string;
  /**
   * If there's no virtual meeting present, lets schedule a call with the relation (if present).
   */
  schedulePhoneNumberDial?: string;
  /**
   * Event to be re-executed whenever this happens.
   *
   * TODO: should also make all things after become stale if there are things later.
   */
  onFire?: string;
  /**
   * As a person doesn't have more than, let's say, 10000 events, this can be a 4 letter unique identifier, short enough to make it easy for the LLM
   */
  __id?: string;
  /**
   * virtualMeetingPin
   */
  virtualMeetingPin?: string;
  /**
   * virtualMeetingPhone
   */
  virtualMeetingPhone?: string;
  /**
   * virtualMeetingLink
   */
  virtualMeetingLink?: string;
  /**
   * virtualMeetingDialIn
   */
  virtualMeetingDialIn?: string;
  /**
   * If there's a phonenumber, dial it
   */
  phoneNumberDial?: string;
  /**
   * Tries to find the relation phone number based on the relationName found in the description
   */
  phoneNumber?: string;
  /**
   * relationName
   */
  relationName?: string;
  [k: string]: unknown;
}
