/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Parameter = Parameter1 & {
  name: string;
  in: string;
  description?: string;
  required?: boolean;
  deprecated?: boolean;
  allowEmptyValue?: boolean;
  style?: string;
  explode?: boolean;
  allowReserved?: boolean;
  schema?: Schema | Reference;
  content?: {
    [k: string]: MediaType;
  };
  example?: any;
  examples?: {
    [k: string]: Example | Reference;
  };
  /**
   * This interface was referenced by `undefined`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
};
export type Parameter1 = ExampleXORExamples & SchemaXORContent & ParameterLocation;
/**
 * Schema and content are mutually exclusive, at least one is required
 */
export type SchemaXORContent = {
  [k: string]: any;
};
/**
 * Parameter location
 */
export type ParameterLocation =
  | {
      in?: "path";
      style?: "matrix" | "label" | "simple";
      required: true;
      [k: string]: any;
    }
  | {
      in?: "query";
      style?: "form" | "spaceDelimited" | "pipeDelimited" | "deepObject";
      [k: string]: any;
    }
  | {
      in?: "header";
      style?: "simple";
      [k: string]: any;
    }
  | {
      in?: "cookie";
      style?: "form";
      [k: string]: any;
    };
export type MediaType = MediaType1 & {
  schema?: Schema | Reference;
  example?: any;
  examples?: {
    [k: string]: Example | Reference;
  };
  encoding?: {
    [k: string]: Encoding;
  };
  /**
   * This interface was referenced by `undefined`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
};
export type MediaType1 = ExampleXORExamples;
export type Header = Header1 & {
  description?: string;
  required?: boolean;
  deprecated?: boolean;
  allowEmptyValue?: boolean;
  style?: "simple";
  explode?: boolean;
  allowReserved?: boolean;
  schema?: Schema | Reference;
  content?: {
    [k: string]: MediaType1;
  };
  example?: any;
  examples?: {
    [k: string]: Example | Reference;
  };
  /**
   * This interface was referenced by `undefined`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
};
export type Header1 = ExampleXORExamples & SchemaXORContent;
export type SecurityScheme =
  | APIKeySecurityScheme
  | HTTPSecurityScheme
  | OAuth2SecurityScheme
  | OpenIdConnectSecurityScheme;
export type HTTPSecurityScheme = {
  scheme: string;
  bearerFormat?: string;
  description?: string;
  type: "http";
  /**
   * This interface was referenced by `undefined`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
} & HTTPSecurityScheme1;
export type HTTPSecurityScheme1 =
  | {
      scheme?: string;
      [k: string]: any;
    }
  | {
      scheme?: {
        [k: string]: any;
      };
      [k: string]: any;
    };

/**
 * The description of OpenAPI v3.0.x documents, as defined by https://spec.openapis.org/oas/v3.0.3 and extended by ActionSchema.
 */
export interface OpenAPIDocument {
  $schema: string;
  $id?: string;
  /**
   * If given, should be a url linking to the original file, the starting point, if this is not already the one. Used to determine if anything has changed.
   */
  $source?: string;
  /**
   * Version
   */
  openapi: string;
  /**
   * Version of actionschema.
   */
  "x-actionschema": string;
  info: Info;
  externalDocs?: ExternalDocumentation;
  /**
   * An array of Server Objects, which provide connectivity information to a target server. If the servers property is not provided, or is an empty array, the default value would be a Server Object with a url value of /.
   */
  servers?: Server[];
  /**
   * An array of Server Objects, indicating the original servers. Useful when defining a proxy.
   */
  "x-origin-servers"?: Server[];
  /**
   * A declaration of which security mechanisms can be used across the API. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request. Individual operations can override this definition. To make security optional, an empty security requirement ({}) can be included in the array.
   *
   * Please note: Every item in this array is an object with keys being the scheme names (can be anything). These names should then also be defined in components.securitySchemes.
   */
  security?: SecurityRequirement[];
  /**
   * Used for grouping endpoints together.
   *
   * A list of tags used by the specification with additional metadata. The order of the tags can be used to reflect on their order by the parsing tools. Not all tags that are used by the Operation Object must be declared. The tags that are not declared MAY be organized randomly or based on the tools' logic. Each tag name in the list MUST be unique.
   */
  tags?: Tag[];
  paths: Paths;
  components?: Components;
  /**
   * This interface was referenced by `OpenAPIDocument`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
/**
 * Provides metadata about the API. The metadata MAY be used by tooling as required.
 */
export interface Info {
  title: string;
  description?: string;
  termsOfService?: string;
  contact?: Contact;
  license?: License;
  /**
   * The version of the OpenAPI document (which is distinct from the OpenAPI Specification version or the API implementation version).
   */
  version: string;
  /**
   * Different people in the company and their capabilities and communication channels
   */
  "x-people"?: Contact1[];
  /**
   * Product info.
   */
  "x-product"?: {
    [k: string]: any;
  };
  /**
   * Important links needed for agents to make using the API easier.
   */
  "x-links"?: {
    signupUrl?: string;
    loginUrl?: string;
    forgotPasswordUrl?: string;
    pricingUrl?: string;
    /**
     * Page from where logged-in user can make purchases, cancel subscription, etc.
     */
    billingUrl?: string;
    /**
     * URL of a page where the user can see their usage and its cost.
     */
    usageUrl?: string;
    docsUrl?: string;
    supportUrl?: string;
    /**
     * Url of the page where the user can find the required information for authorizing on the API. Usually this is a page where the user can create and see their API tokens.
     */
    apiAuthorizationSettingsUrl?: string;
  };
  /**
   * Pricing info including monthly fees.
   */
  "x-pricing"?: {
    /**
     * General summary of all plans
     */
    description?: string;
    plans?: {
      price: number;
      currency: string;
      title: string;
      /**
       * How much credit do you get for this. Credit matches the credit spent with 'priceCredit' extension for operations
       */
      credit: number;
      /**
       * How long will you retain the credit you receive?
       */
      persistence?: "forever" | "interval" | "capped";
      /**
       * Required when filling in persistence 'capped'
       */
      persistenceCappedDays?: number;
      /**
       * If the plan is a subscription based plan, fill in the interval on which every time the price is paid, and credit is given.
       *
       * If there is a pay-as-you-go price, fill in the minimum purchase size for each step. It will be assumed the price to credit ratio is linear.
       */
      interval?: "week" | "month" | "quarter" | "year";
      rateLimit?: RateLimit;
    }[];
  };
  "x-rateLimit"?: RateLimit1;
  /**
   * General product reviews, collected.
   */
  "x-reviews"?: {
    [k: string]: any;
  };
  /**
   * General latency info.
   */
  "x-latency"?: {
    [k: string]: any;
  };
  /**
   * Link to other openapis that could be good alternatives.
   */
  "x-alternatives"?: {
    [k: string]: any;
  }[];
  /**
   * Logo metadata. Standard taken from https://apis.guru
   */
  "x-logo"?: {
    /**
     * URL to a logo image
     */
    url?: string;
    backgroundColor?: string;
    secondaryColor?: string;
  };
  /**
   * This interface was referenced by `Info`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
/**
 * Contact information for the exposed API.
 */
export interface Contact {
  name?: string;
  url?: string;
  email?: string;
  "x-phoneNumber"?: string;
  "x-description"?: string;
  /**
   * This interface was referenced by `Contact`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   *
   * This interface was referenced by `Contact1`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
/**
 * The license information for the exposed API.
 */
export interface License {
  name: string;
  url?: string;
  /**
   * This interface was referenced by `License`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface Contact1 {
  name?: string;
  url?: string;
  email?: string;
  "x-phoneNumber"?: string;
  "x-description"?: string;
  /**
   * This interface was referenced by `Contact`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   *
   * This interface was referenced by `Contact1`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
/**
 * Plan-based RateLimit info that overwrites the general rateLimit.
 */
export interface RateLimit {
  limit?: number;
  interval?: "second" | "minute";
  [k: string]: any;
}
/**
 * Global ratelimit info. Can be overwritten either by plans or by operations.
 */
export interface RateLimit1 {
  limit?: number;
  interval?: "second" | "minute";
  [k: string]: any;
}
/**
 * Additional external documentation.
 */
export interface ExternalDocumentation {
  description?: string;
  url: string;
  /**
   * Scraped markdown from the url
   */
  markdown?: {
    [k: string]: any;
  };
  /**
   * This interface was referenced by `ExternalDocumentation`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   *
   * This interface was referenced by `ExternalDocumentation1`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface Server {
  url: string;
  description?: string;
  variables?: {
    [k: string]: ServerVariable;
  };
  /**
   * This interface was referenced by `Server`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface ServerVariable {
  enum?: string[];
  default: string;
  description?: string;
  /**
   * This interface was referenced by `ServerVariable`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface SecurityRequirement {
  [k: string]: string[];
}
export interface Tag {
  name: string;
  description?: string;
  externalDocs?: ExternalDocumentation1;
  "x-rateLimit"?: RateLimit2;
  /**
   * This interface was referenced by `Tag`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface ExternalDocumentation1 {
  description?: string;
  url: string;
  /**
   * Scraped markdown from the url
   */
  markdown?: {
    [k: string]: any;
  };
  /**
   * This interface was referenced by `ExternalDocumentation`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   *
   * This interface was referenced by `ExternalDocumentation1`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
/**
 * Tag-based ratelimit info.
 */
export interface RateLimit2 {
  limit?: number;
  interval?: "second" | "minute";
  [k: string]: any;
}
/**
 * The available paths and operations for the API.
 */
export interface Paths {}
/**
 * This interface was referenced by `Paths`'s JSON-Schema definition
 * via the `patternProperty` "^\/".
 */
export interface PathItem {
  /**
   * It's possible to reference another path here, even from another openapi spec (remote). This creates a realtime copy of the specification.
   */
  $ref?: string;
  /**
   * This could be a way to define the proxy. Advantage of this way to define it is that we can also
   */
  "x-proxy"?: {
    /**
     * If not available, will use $ref
     */
    pathUri?: string;
    /**
     * Which methods are proxied. If not given, proxies all methods.
     */
    methods?: ("get" | "put" | "post" | "delete" | "options" | "head" | "patch" | "trace")[];
    "private:security"?: SecurityRequirement1;
  };
  summary?: string;
  description?: string;
  servers?: Server[];
  parameters?: (Parameter | Reference)[];
}
/**
 * ActionSchema Extension for proxy: Filled in security details based on the OpenAPIs securitySchemes. Should be omitted when showing this publicly. Instead of doing it like this, an alternative would be a private file security.json
 */
export interface SecurityRequirement1 {
  [k: string]: string[];
}
/**
 * Example and examples are mutually exclusive
 */
export interface ExampleXORExamples {
  [k: string]: any;
}
export interface Schema {
  title?: string;
  multipleOf?: number;
  maximum?: number;
  exclusiveMaximum?: boolean;
  minimum?: number;
  exclusiveMinimum?: boolean;
  maxLength?: number;
  minLength?: number;
  pattern?: string;
  maxItems?: number;
  minItems?: number;
  uniqueItems?: boolean;
  maxProperties?: number;
  minProperties?: number;
  /**
   * @minItems 1
   */
  required?: [string, ...string[]];
  /**
   * @minItems 1
   */
  enum?: [any, ...any[]];
  type?: "array" | "boolean" | "integer" | "number" | "object" | "string";
  not?: Schema | Reference;
  allOf?: (Schema | Reference)[];
  oneOf?: (Schema | Reference)[];
  anyOf?: (Schema | Reference)[];
  items?: Schema | Reference;
  properties?: {
    [k: string]: Schema | Reference;
  };
  additionalProperties?: Schema | Reference | boolean;
  description?: string;
  format?: string;
  default?: any;
  nullable?: boolean;
  discriminator?: Discriminator;
  readOnly?: boolean;
  writeOnly?: boolean;
  example?: any;
  externalDocs?: ExternalDocumentation1;
  deprecated?: boolean;
  xml?: XML;
  /**
   * This interface was referenced by `Schema`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface Reference {
  /**
   * This interface was referenced by `Reference`'s JSON-Schema definition
   * via the `patternProperty` "^\$ref$".
   */
  [k: string]: string;
}
/**
 * Used to select a oneOf-value based on a property in the value. See https://swagger.io/specification/v3/#discriminator-object
 */
export interface Discriminator {
  propertyName: string;
  mapping?: {
    [k: string]: string;
  };
  [k: string]: any;
}
/**
 * A metadata object that allows for more fine-tuned XML model definitions
 */
export interface XML {
  name?: string;
  namespace?: string;
  prefix?: string;
  attribute?: boolean;
  wrapped?: boolean;
  /**
   * This interface was referenced by `XML`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
/**
 * See https://swagger.io/specification/v3/#example-object
 */
export interface Example {
  summary?: string;
  description?: string;
  value?: any;
  externalValue?: string;
  /**
   * This interface was referenced by `Example`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface Encoding {
  contentType?: string;
  headers?: {
    [k: string]: Header | Reference;
  };
  style?: "form" | "spaceDelimited" | "pipeDelimited" | "deepObject";
  explode?: boolean;
  allowReserved?: boolean;
  /**
   * This interface was referenced by `Encoding`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
/**
 * This interface was referenced by `PathItem`'s JSON-Schema definition
 * via the `patternProperty` "^(get|put|post|delete|options|head|patch|trace)$".
 */
export interface Operation {
  /**
   * ActionSchema addition: Should refer to an operationId in the same OpenAPI that would undo the side-effect that calling this function caused.
   *
   * If this is given into a path.post object it should mean that this function has an external side-effect when executed, for example it will store some data somewhere.
   *
   * To undo this side-effect when changing or removing the plugin, we can specify an unmount plugin that is also part of the same openapi.
   *
   * The idea is that if specified, the side effect doesn't leavve any residu
   */
  "x-unmountOperationId"?: string;
  /**
   * This could be the code executed upon receiving the requestBody as context. If we can create an editor that has the proper typescript context and shows the function based on the body, we have a single source of truth for the codebase. We code inside the openapi! The beauty is, this is programming language agnostic and we have a much more readable way to get interfaces.
   */
  "x-rawBodyCode"?: {
    runtime?: "browser" | "bun" | "node" | "python3" | "rust" | "go";
    host?: "edge" | "server" | "serverless" | "gpu";
    code?: string;
    [k: string]: any;
  };
  "x-rateLimit"?: RateLimit3;
  /**
   * Define how much credits need to be blocked for using this endpoint, and deducted afterwards. Can be overwritten in response.
   */
  "x-priceCredit"?: number;
  /**
   * Defining tags here will help group the endpoint for different user interfaces.
   */
  tags?: string[];
  summary?: string;
  description?: string;
  externalDocs?: ExternalDocumentation1;
  operationId?: string;
  parameters?: (Parameter1 | Reference)[];
  requestBody?: RequestBody | Reference;
  responses: Responses;
  callbacks?: {
    [k: string]: Callback | Reference;
  };
  deprecated?: boolean;
  security?: SecurityRequirement[];
  servers?: Server[];
  /**
   * This interface was referenced by `Operation`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
/**
 * Operation-based ratelimit info. This overwrites plan-based or global ratelimits.
 */
export interface RateLimit3 {
  limit?: number;
  interval?: "second" | "minute";
  [k: string]: any;
}
export interface RequestBody {
  description?: string;
  content: {
    [k: string]: MediaType1;
  };
  required?: boolean;
  /**
   * This interface was referenced by `RequestBody`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface Responses {
  default?: Response | Reference;
}
export interface Response {
  description: string;
  headers?: {
    [k: string]: Header1 | Reference;
  };
  content?: {
    [k: string]: MediaType1;
  };
  links?: {
    [k: string]: Link | Reference;
  };
  /**
   * This interface was referenced by `Response`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface Link {
  operationId?: string;
  operationRef?: string;
  parameters?: {
    [k: string]: any;
  };
  requestBody?: any;
  description?: string;
  server?: Server;
  /**
   * This interface was referenced by `Link`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface Callback {
  [k: string]: PathItem;
}
/**
 * An element to hold various schemas for the specification.
 */
export interface Components {
  schemas?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9\.\-_]+$".
     */
    [k: string]: Schema | Reference;
  };
  responses?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9\.\-_]+$".
     */
    [k: string]: Reference | Response;
  };
  parameters?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9\.\-_]+$".
     */
    [k: string]: Reference | Parameter1;
  };
  examples?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9\.\-_]+$".
     */
    [k: string]: Reference | Example;
  };
  requestBodies?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9\.\-_]+$".
     */
    [k: string]: Reference | RequestBody;
  };
  headers?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9\.\-_]+$".
     */
    [k: string]: Reference | Header1;
  };
  securitySchemes?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9\.\-_]+$".
     */
    [k: string]: Reference | SecurityScheme;
  };
  links?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9\.\-_]+$".
     */
    [k: string]: Reference | Link;
  };
  callbacks?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "^[a-zA-Z0-9\.\-_]+$".
     */
    [k: string]: Reference | Callback;
  };
  /**
   * This interface was referenced by `Components`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface APIKeySecurityScheme {
  type: "apiKey";
  name: string;
  in: "header" | "query" | "cookie";
  description?: string;
  /**
   * This interface was referenced by `APIKeySecurityScheme`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface OAuth2SecurityScheme {
  type: "oauth2";
  flows: OAuthFlows;
  description?: string;
  /**
   * This interface was referenced by `OAuth2SecurityScheme`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface OAuthFlows {
  implicit?: ImplicitOAuthFlow;
  password?: PasswordOAuthFlow;
  clientCredentials?: ClientCredentialsFlow;
  authorizationCode?: AuthorizationCodeOAuthFlow;
  /**
   * This interface was referenced by `OAuthFlows`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface ImplicitOAuthFlow {
  authorizationUrl: string;
  refreshUrl?: string;
  scopes: {
    [k: string]: string;
  };
  /**
   * This interface was referenced by `ImplicitOAuthFlow`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface PasswordOAuthFlow {
  tokenUrl: string;
  refreshUrl?: string;
  scopes: {
    [k: string]: string;
  };
  /**
   * This interface was referenced by `PasswordOAuthFlow`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface ClientCredentialsFlow {
  tokenUrl: string;
  refreshUrl?: string;
  scopes: {
    [k: string]: string;
  };
  /**
   * This interface was referenced by `ClientCredentialsFlow`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface AuthorizationCodeOAuthFlow {
  authorizationUrl: string;
  tokenUrl: string;
  refreshUrl?: string;
  scopes: {
    [k: string]: string;
  };
  /**
   * This interface was referenced by `AuthorizationCodeOAuthFlow`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
export interface OpenIdConnectSecurityScheme {
  type: "openIdConnect";
  openIdConnectUrl: string;
  description?: string;
  /**
   * This interface was referenced by `OpenIdConnectSecurityScheme`'s JSON-Schema definition
   * via the `patternProperty` "^x-".
   */
  [k: string]: any;
}
