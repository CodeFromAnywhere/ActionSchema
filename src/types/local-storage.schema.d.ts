/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * To improve ActionSchema we do research based on anonymous usage data. You can opt-out of this by unchecking this box.
 */
export type AnonymousUsageInfoCollection = boolean;
/**
 * The entire OpenAPI URL should be here
 */
export type OpenAPIURL = string;
/**
 * In case this is given and your IS_DEV is set to "true", this URL will be used when executing. However, this URL will never be set into the ActionSchema as this would cause things to not work when pushing to production. This is why it's needed to have this parameter: we want a good development experience at localhost for any openapi we may make, being able to make production-schemas from localhost
 */
export type LocalhostOpenAPIURL = string;
/**
 * Here you can fill in the OpenAPIs you want to use. By default, OpenAPIs in your schema files will also be indexed.
 */
export type OpenAPIs = OpenAPIReference[];
/**
 * Ensure this OpenAPI implements the ActionSchema Server specification. Of course, you can simply use our ActionSchema Server if you want to run things locally or on-premise. However, if you want even more control, you can make your own ActionSchema Server (in any language). The only thing you need to do, is expose the openapi file similar to the one found at https://actionschema.com/openapi.json (Coming soon)
 */
export type ActionSchemaServerOpenAPIPath = string;

export interface LocalStorageState {
  general?: Configuration;
  openApis?: OpenAPIs;
  actionSchemaServer?: ActionSchemaServer;
  [k: string]: any;
}
export interface Configuration {
  isUsageCollected?: AnonymousUsageInfoCollection;
  [k: string]: any;
}
export interface OpenAPIReference {
  __id?: OpenAPIURL;
  /**
   * Headers
   */
  headers?: {
    [k: string]: string;
  };
  localhostOpenapiUrl?: LocalhostOpenAPIURL;
  [k: string]: any;
}
/**
 * By default, the browser is used for storing and executing your ActionSchemas. If you use a hosted ActionSchema management solution, set the OpenAPI here.
 */
export interface ActionSchemaServer {
  useActionSchemaOpenApi?: boolean;
  actionSchemaOpenApiPath?: ActionSchemaServerOpenAPIPath;
  /**
   * Headers:
   */
  actionSchemaOpenApiHeaders?: {
    [k: string]: string;
  };
  [k: string]: any;
}
