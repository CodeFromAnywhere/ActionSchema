[
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/browser-indexed-db/executeBrowser.ts",
    "name": "NamedParameters<typeof executeBrowser>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/browser-indexed-db/executeBrowser.ts",
    "operationRelativePath": "src/browser-indexed-db/executeBrowser.ts",
    "error": "Error: Could not translate intersection to union."
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "name": "NamedParameters<typeof getDotLocationRange>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "operationRelativePath": "src/browser-indexed-db/indexedDb.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20getDotLocationRange%3E",
      "definitions": {
        "NamedParameters<typeof getDotLocationRange>": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "name": "NamedParameters<typeof initDb>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "operationRelativePath": "src/browser-indexed-db/indexedDb.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20initDb%3E",
      "definitions": {
        "NamedParameters<typeof initDb>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string"
            }
          },
          "required": [
            "databaseId"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "name": "NamedParameters<typeof indexedDbPutData>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "operationRelativePath": "src/browser-indexed-db/indexedDb.ts",
    "error": "TypeError: undefined is not an object (evaluating 'type.getId')"
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "name": "NamedParameters<typeof indexedDbBuildObject>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "operationRelativePath": "src/browser-indexed-db/indexedDb.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20indexedDbBuildObject%3E",
      "definitions": {
        "NamedParameters<typeof indexedDbBuildObject>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string",
              "description": "E.g. the full JSON object"
            },
            "dotLocationBase": {
              "type": "string",
              "description": "if given, this is required prefix"
            }
          },
          "required": [
            "databaseId"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "name": "NamedParameters<typeof indexedDbGetItems>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "operationRelativePath": "src/browser-indexed-db/indexedDb.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20indexedDbGetItems%3E",
      "definitions": {
        "NamedParameters<typeof indexedDbGetItems>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string",
              "description": "E.g. the full JSON object"
            }
          },
          "required": [
            "databaseId"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "name": "NamedParameters<typeof indexedDbGetStoreItem>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/browser-indexed-db/indexedDb.ts",
    "operationRelativePath": "src/browser-indexed-db/indexedDb.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20indexedDbGetStoreItem%3E",
      "definitions": {
        "NamedParameters<typeof indexedDbGetStoreItem>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string",
              "description": "E.g. the full JSON object"
            },
            "key": {
              "type": "string"
            }
          },
          "required": [
            "databaseId",
            "key"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/browser-indexed-db/corsProxyApi.tsx",
    "name": "NamedParameters<typeof corsProxyApi>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/browser-indexed-db/corsProxyApi.tsx",
    "operationRelativePath": "src/browser-indexed-db/corsProxyApi.tsx",
    "error": "TypeError: WeakMap keys must be objects or non-registered symbols"
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/getDotlocationBase.ts",
    "name": "NamedParameters<typeof getDotLocationBase>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/getDotlocationBase.ts",
    "operationRelativePath": "src/util/getDotlocationBase.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20getDotLocationBase%3E",
      "definitions": {
        "NamedParameters<typeof getDotLocationBase>": {
          "type": "object",
          "properties": {
            "dotLocation": {
              "type": "string"
            },
            "replaceDotLocation": {
              "type": "string"
            }
          },
          "required": [
            "dotLocation"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/tryParseYamlToJson.ts",
    "name": "NamedParameters<typeof tryParseYamlToJson>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/tryParseYamlToJson.ts",
    "operationRelativePath": "src/util/tryParseYamlToJson.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20tryParseYamlToJson%3E",
      "definitions": {
        "NamedParameters<typeof tryParseYamlToJson>": {
          "type": "object",
          "properties": {
            "yamlString": {
              "type": "string"
            }
          },
          "required": [
            "yamlString"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/fetchPluginOrDefault.ts",
    "name": "NamedParameters<typeof fetchPluginOrDefault>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/fetchPluginOrDefault.ts",
    "operationRelativePath": "src/util/fetchPluginOrDefault.ts",
    "error": "Error: Reference type not set yet"
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/getDotLocation.ts",
    "name": "NamedParameters<typeof getDotLocation>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/getDotLocation.ts",
    "operationRelativePath": "src/util/getDotLocation.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20getDotLocation%3E",
      "definitions": {
        "NamedParameters<typeof getDotLocation>": {
          "type": "object",
          "properties": {
            "object": {},
            "dotLocation": {
              "type": "string"
            }
          },
          "required": [
            "object",
            "dotLocation"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/fetchExecute.ts",
    "name": "NamedParameters<typeof fetchExecute>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/fetchExecute.ts",
    "operationRelativePath": "src/util/fetchExecute.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20fetchExecute%3E",
      "definitions": {
        "NamedParameters<typeof fetchExecute>": {
          "type": "object",
          "properties": {
            "context": {
              "type": "object",
              "properties": {
                "executeApiPath": {
                  "type": "string"
                },
                "executeApiHeaders": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "executeApiHeaders",
                "executeApiPath"
              ]
            }
          },
          "required": [
            "context"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/types.ts",
    "name": "ValueOptions",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/types.ts",
    "operationRelativePath": "src/util/types.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/ValueOptions",
      "definitions": {
        "ValueOptions": {
          "type": "object",
          "properties": {
            "objectReplace": {
              "type": "boolean",
              "description": "If true, will replace the object rather than overwriting it where needed.\n\nBy default, ActionSchema will overwrite only the given individual properties of an object. In this case, the other properties will be set to stale if needed."
            },
            "arrayReplace": {
              "type": "boolean",
              "description": "If true, will replace items in the array fully.\n\nBy default, ActionSchema will insert into an array with an optional discriminator (see below)."
            },
            "arrayDiscriminatorPropertyKey": {
              "type": "string",
              "description": "If given, must be a key of the object in the array. Will now overwrite/replace object-items where a discriminator matches, while keeping the rest as-is."
            }
          },
          "additionalProperties": false,
          "description": "Should be inferred from x-plugin"
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/types.ts",
    "name": "EnvironmentConfig",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/types.ts",
    "operationRelativePath": "src/util/types.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/EnvironmentConfig",
      "definitions": {
        "EnvironmentConfig": {
          "type": "object",
          "properties": {
            "recurseFunction": {
              "type": "object",
              "properties": {
                "isFunction": {
                  "type": "boolean",
                  "const": true
                }
              },
              "description": "Function to recurse on dependants."
            },
            "setStatus": {
              "type": "object",
              "properties": {
                "isFunction": {
                  "type": "boolean",
                  "const": true
                }
              },
              "description": "Set or remove a status."
            },
            "getStatus": {
              "type": "object",
              "properties": {
                "isFunction": {
                  "type": "boolean",
                  "const": true
                }
              },
              "description": "Get a status"
            },
            "setData": {
              "type": "object",
              "properties": {
                "isFunction": {
                  "type": "boolean",
                  "const": true
                }
              }
            },
            "getData": {
              "type": "object",
              "properties": {
                "isFunction": {
                  "type": "boolean",
                  "const": true
                }
              }
            },
            "fetchPlugin": {
              "type": "object",
              "properties": {
                "isFunction": {
                  "type": "boolean",
                  "const": true
                }
              },
              "description": "Can be different in environments"
            }
          },
          "required": [
            "recurseFunction",
            "setStatus",
            "getStatus",
            "setData",
            "getData",
            "fetchPlugin"
          ],
          "additionalProperties": false,
          "description": "The main 3 environments I want to be supporting are:\n\n- server (Users state is all in the server - can be a homeserver)\n- serverless (Users state is stored in some DB)\n- browser (Users state stays with the user)\n\nThe browser is the most scalable one, but is limited as it cannot easily receive callbacks and needs to remain online at all times. On the other hand, the server is the least scalable and hardest to set up, but has no limitations.\n\nThe goal is to share as much code as possible between the three environments, and open source at least the browser variant to get some eyeballs."
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/types.ts",
    "name": "ExecuteContext",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/types.ts",
    "operationRelativePath": "src/util/types.ts",
    "error": "Error: Encountered a reference to a missing definition: \"#/definitions/ExecuteContext\". This is a bug."
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/types.ts",
    "name": "ExecuteResult",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/types.ts",
    "operationRelativePath": "src/util/types.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/ExecuteResult",
      "definitions": {
        "ExecuteResult": {
          "type": "object",
          "properties": {
            "isSuccessful": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "result": {
              "description": "Optional result"
            }
          },
          "required": [
            "isSuccessful",
            "message"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/types.ts",
    "name": "SetDataResult",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/types.ts",
    "operationRelativePath": "src/util/types.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/SetDataResult",
      "definitions": {
        "SetDataResult": {
          "type": "object",
          "properties": {
            "isSuccessful": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            }
          },
          "required": [
            "isSuccessful",
            "message"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/cleanFetch.ts",
    "name": "NamedParameters<typeof cleanFetch>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/cleanFetch.ts",
    "operationRelativePath": "src/util/cleanFetch.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20cleanFetch%3E",
      "definitions": {
        "NamedParameters<typeof cleanFetch>": {
          "type": "object",
          "properties": {
            "details": {
              "type": "object",
              "properties": {
                "apiUrl": {
                  "type": "string"
                },
                "headers": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                }
              },
              "required": [
                "apiUrl",
                "headers",
                "method"
              ],
              "additionalProperties": false
            },
            "context": {}
          },
          "required": [
            "details",
            "context"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/fetchOpenapi.ts",
    "name": "NamedParameters<typeof fetchOpenapi>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/fetchOpenapi.ts",
    "operationRelativePath": "src/util/fetchOpenapi.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20fetchOpenapi%3E",
      "definitions": {
        "NamedParameters<typeof fetchOpenapi>": {
          "type": "object",
          "properties": {
            "openapiUrl": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/execute.ts",
    "name": "NamedParameters<typeof execute>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/execute.ts",
    "operationRelativePath": "src/util/execute.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20execute%3E",
      "definitions": {
        "NamedParameters<typeof execute>": {
          "type": "object",
          "properties": {
            "context": {
              "type": "object",
              "properties": {
                "recurseFunction": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  },
                  "description": "Function to recurse on dependants."
                },
                "setStatus": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  },
                  "description": "Set or remove a status."
                },
                "getStatus": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  },
                  "description": "Get a status"
                },
                "setData": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  }
                },
                "getData": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  }
                },
                "fetchPlugin": {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  },
                  "description": "Can be different in environments"
                }
              },
              "required": [
                "fetchPlugin",
                "getData",
                "getStatus",
                "recurseFunction",
                "setData",
                "setStatus"
              ]
            }
          },
          "required": [
            "context"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/execute.ts",
    "name": "NamedParameters<typeof getNewObjectExposedDotLocations>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/execute.ts",
    "operationRelativePath": "src/util/execute.ts",
    "error": "Error: Reference type not set yet"
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/execute.ts",
    "name": "NamedParameters<typeof getNewArrayExposedDotLocations>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/execute.ts",
    "operationRelativePath": "src/util/execute.ts",
    "error": "Error: Encountered a reference to a missing definition: \"#/definitions/interface-1366410753-558-3934-1366410753-0-8112\". This is a bug."
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/getOpenapiDetails.ts",
    "name": "NamedParameters<typeof getOpenapiDetails>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/getOpenapiDetails.ts",
    "operationRelativePath": "src/util/getOpenapiDetails.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20getOpenapiDetails%3E",
      "definitions": {
        "NamedParameters<typeof getOpenapiDetails>": {
          "type": "object",
          "properties": {
            "$openapi": {
              "$ref": "#/definitions/OpenAPIDetails"
            },
            "actionSchemaPlugins": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionSchemaPlugin"
              }
            }
          },
          "additionalProperties": false
        },
        "OpenAPIDetails": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "operationId": {
              "type": "string"
            },
            "emoji": {
              "type": "string"
            }
          },
          "required": [
            "url",
            "path",
            "method",
            "operationId"
          ],
          "description": "The OpenAPI information required to execute the function."
        },
        "ActionSchemaPlugin": {
          "type": "object",
          "properties": {
            "__id": {
              "type": "string",
              "description": "The entire URL should be here"
            },
            "headers": {
              "type": "string"
            },
            "localhostOpenapiUrl": {
              "type": "string",
              "description": "In case this is given and your IS_DEV is set to \"true\", this URL will be used when executing. However, this URL will never be set into the ActionSchema as this would cause things to not work when pushing to production. This is why it's needed to have this parameter: we want a good development experience at localhost for any openapi we may make, being able to make production-schemas from localhost"
            },
            "isInternallyHosted": {
              "type": "boolean",
              "description": "If true, this indicates we should always use localhost, even in production."
            }
          },
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/executeStaleWatcher.ts",
    "name": "NamedParameters<typeof executeStaleWatcher>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/executeStaleWatcher.ts",
    "operationRelativePath": "src/util/executeStaleWatcher.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20executeStaleWatcher%3E",
      "definitions": {
        "NamedParameters<typeof executeStaleWatcher>": {
          "type": "object",
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/tryParseJson.ts",
    "name": "NamedParameters<typeof tryParseJson>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/tryParseJson.ts",
    "operationRelativePath": "src/util/tryParseJson.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20tryParseJson%3E",
      "definitions": {
        "NamedParameters<typeof tryParseJson>": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            },
            "logParseError": {
              "type": "boolean"
            }
          },
          "required": [
            "text"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/fetchWithTimeout.ts",
    "name": "NamedParameters<typeof fetchWithTimeout>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/fetchWithTimeout.ts",
    "operationRelativePath": "src/util/fetchWithTimeout.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20fetchWithTimeout%3E",
      "definitions": {
        "NamedParameters<typeof fetchWithTimeout>": {
          "type": "object",
          "properties": {
            "input": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/Request"
                },
                {
                  "type": "string",
                  "format": "uri"
                }
              ]
            },
            "init": {
              "$ref": "#/definitions/RequestInit"
            },
            "timeoutMs": {
              "type": "number"
            },
            "isNoJson": {
              "type": "boolean"
            },
            "isNoText": {
              "type": "boolean"
            }
          },
          "required": [
            "input"
          ],
          "additionalProperties": false
        },
        "Request": {
          "type": "object",
          "properties": {
            "body": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ReadableStream%3CUint8Array%3E"
                },
                {
                  "type": "null"
                }
              ],
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/body)"
            },
            "bodyUsed": {
              "type": "boolean",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bodyUsed)"
            },
            "cache": {
              "$ref": "#/definitions/RequestCache",
              "description": "Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/cache)"
            },
            "credentials": {
              "$ref": "#/definitions/RequestCredentials",
              "description": "Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/credentials)"
            },
            "destination": {
              "$ref": "#/definitions/RequestDestination",
              "description": "Returns the kind of resource requested by request, e.g., \"document\" or \"script\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/destination)"
            },
            "headers": {
              "$ref": "#/definitions/Headers",
              "description": "Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the \"Host\" header.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/headers)"
            },
            "integrity": {
              "type": "string",
              "description": "Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/integrity)"
            },
            "keepalive": {
              "type": "boolean",
              "description": "Returns a boolean indicating whether or not request can outlive the global in which it was created.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/keepalive)"
            },
            "method": {
              "type": "string",
              "description": "Returns request's HTTP method, which is \"GET\" by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)"
            },
            "mode": {
              "$ref": "#/definitions/RequestMode",
              "description": "Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/mode)"
            },
            "redirect": {
              "$ref": "#/definitions/RequestRedirect",
              "description": "Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/redirect)"
            },
            "referrer": {
              "type": "string",
              "description": "Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and \"about:client\" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrer)"
            },
            "referrerPolicy": {
              "$ref": "#/definitions/ReferrerPolicy",
              "description": "Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrerPolicy)"
            },
            "signal": {
              "$ref": "#/definitions/AbortSignal",
              "description": "Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/signal)"
            },
            "url": {
              "type": "string",
              "description": "Returns the URL of request as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/url)"
            }
          },
          "required": [
            "body",
            "bodyUsed",
            "cache",
            "credentials",
            "destination",
            "headers",
            "integrity",
            "keepalive",
            "method",
            "mode",
            "redirect",
            "referrer",
            "referrerPolicy",
            "signal",
            "url"
          ],
          "additionalProperties": false,
          "description": "This Fetch API interface represents a resource request.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request)"
        },
        "ReadableStream<Uint8Array>": {
          "type": "object",
          "properties": {
            "locked": {
              "type": "boolean",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
            }
          },
          "required": [
            "locked"
          ],
          "additionalProperties": false,
          "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
        },
        "RequestCache": {
          "type": "string",
          "enum": [
            "default",
            "force-cache",
            "no-cache",
            "no-store",
            "only-if-cached",
            "reload"
          ]
        },
        "RequestCredentials": {
          "type": "string",
          "enum": [
            "include",
            "omit",
            "same-origin"
          ]
        },
        "RequestDestination": {
          "type": "string",
          "enum": [
            "",
            "audio",
            "audioworklet",
            "document",
            "embed",
            "font",
            "frame",
            "iframe",
            "image",
            "manifest",
            "object",
            "paintworklet",
            "report",
            "script",
            "sharedworker",
            "style",
            "track",
            "video",
            "worker",
            "xslt"
          ]
        },
        "Headers": {
          "type": "object",
          "additionalProperties": false
        },
        "RequestMode": {
          "type": "string",
          "enum": [
            "cors",
            "navigate",
            "no-cors",
            "same-origin"
          ]
        },
        "RequestRedirect": {
          "type": "string",
          "enum": [
            "error",
            "follow",
            "manual"
          ]
        },
        "ReferrerPolicy": {
          "type": "string",
          "enum": [
            "",
            "no-referrer",
            "no-referrer-when-downgrade",
            "origin",
            "origin-when-cross-origin",
            "same-origin",
            "strict-origin",
            "strict-origin-when-cross-origin",
            "unsafe-url"
          ]
        },
        "AbortSignal": {
          "type": "object",
          "properties": {
            "aborted": {
              "type": "boolean",
              "description": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted)"
            },
            "onabort": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event)"
            },
            "reason": {
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason)"
            }
          },
          "required": [
            "aborted",
            "onabort",
            "reason"
          ],
          "additionalProperties": false,
          "description": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal)"
        },
        "RequestInit": {
          "type": "object",
          "properties": {
            "body": {
              "anyOf": [
                {
                  "$ref": "#/definitions/BodyInit"
                },
                {
                  "type": "null"
                }
              ],
              "description": "A BodyInit object or null to set request's body."
            },
            "cache": {
              "$ref": "#/definitions/RequestCache",
              "description": "A string indicating how the request will interact with the browser's cache to set request's cache."
            },
            "credentials": {
              "$ref": "#/definitions/RequestCredentials",
              "description": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
            },
            "headers": {
              "$ref": "#/definitions/HeadersInit",
              "description": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
            },
            "integrity": {
              "type": "string",
              "description": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
            },
            "keepalive": {
              "type": "boolean",
              "description": "A boolean to set request's keepalive."
            },
            "method": {
              "type": "string",
              "description": "A string to set request's method."
            },
            "mode": {
              "$ref": "#/definitions/RequestMode",
              "description": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
            },
            "redirect": {
              "$ref": "#/definitions/RequestRedirect",
              "description": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
            },
            "referrer": {
              "type": "string",
              "description": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
            },
            "referrerPolicy": {
              "$ref": "#/definitions/ReferrerPolicy",
              "description": "A referrer policy to set request's referrerPolicy."
            },
            "signal": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AbortSignal"
                },
                {
                  "type": "null"
                }
              ],
              "description": "An AbortSignal to set request's signal."
            },
            "window": {
              "type": "null",
              "description": "Can only be null. Used to disassociate request from any Window."
            }
          },
          "additionalProperties": false
        },
        "BodyInit": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReadableStream"
            },
            {
              "$ref": "#/definitions/XMLHttpRequestBodyInit"
            }
          ]
        },
        "ReadableStream": {
          "type": "object",
          "properties": {
            "locked": {
              "type": "boolean",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
            }
          },
          "required": [
            "locked"
          ],
          "additionalProperties": false,
          "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
        },
        "XMLHttpRequestBodyInit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Blob"
            },
            {
              "$ref": "#/definitions/BufferSource"
            },
            {
              "$ref": "#/definitions/FormData"
            },
            {
              "$ref": "#/definitions/URLSearchParams"
            },
            {
              "type": "string"
            }
          ]
        },
        "Blob": {
          "type": "object",
          "properties": {
            "size": {
              "type": "number",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size)"
            },
            "type": {
              "type": "string",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type)"
            }
          },
          "required": [
            "size",
            "type"
          ],
          "additionalProperties": false,
          "description": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)"
        },
        "BufferSource": {
          "anyOf": [
            {
              "$ref": "#/definitions/ArrayBufferView"
            },
            {
              "$ref": "#/definitions/ArrayBuffer"
            }
          ]
        },
        "ArrayBufferView": {
          "type": "object",
          "properties": {
            "buffer": {
              "$ref": "#/definitions/ArrayBufferLike"
            },
            "byteLength": {
              "type": "number"
            },
            "byteOffset": {
              "type": "number"
            }
          },
          "required": [
            "buffer",
            "byteLength",
            "byteOffset"
          ],
          "additionalProperties": false
        },
        "ArrayBufferLike": {
          "$ref": "#/definitions/ArrayBuffer"
        },
        "ArrayBuffer": {
          "type": "object",
          "properties": {
            "byteLength": {
              "type": "number"
            }
          },
          "required": [
            "byteLength"
          ],
          "additionalProperties": false
        },
        "FormData": {
          "type": "object",
          "additionalProperties": false
        },
        "URLSearchParams": {
          "type": "object",
          "additionalProperties": false
        },
        "HeadersInit": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 2,
                "maxItems": 2
              }
            },
            {
              "$ref": "#/definitions/Record%3Cstring%2Cstring%3E"
            },
            {
              "$ref": "#/definitions/Headers"
            }
          ]
        },
        "Record<string,string>": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/fetchWithTimeout.ts",
    "name": "NamedParameters<typeof fetchTextWithTimeout>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/fetchWithTimeout.ts",
    "operationRelativePath": "src/util/fetchWithTimeout.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20fetchTextWithTimeout%3E",
      "definitions": {
        "NamedParameters<typeof fetchTextWithTimeout>": {
          "type": "object",
          "properties": {
            "input": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/Request"
                },
                {
                  "type": "string",
                  "format": "uri"
                }
              ]
            },
            "init": {
              "$ref": "#/definitions/RequestInit"
            },
            "timeoutMs": {
              "type": "number"
            },
            "isNoText": {
              "type": "boolean"
            }
          },
          "required": [
            "input"
          ],
          "additionalProperties": false
        },
        "Request": {
          "type": "object",
          "properties": {
            "body": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ReadableStream%3CUint8Array%3E"
                },
                {
                  "type": "null"
                }
              ],
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/body)"
            },
            "bodyUsed": {
              "type": "boolean",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/bodyUsed)"
            },
            "cache": {
              "$ref": "#/definitions/RequestCache",
              "description": "Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/cache)"
            },
            "credentials": {
              "$ref": "#/definitions/RequestCredentials",
              "description": "Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/credentials)"
            },
            "destination": {
              "$ref": "#/definitions/RequestDestination",
              "description": "Returns the kind of resource requested by request, e.g., \"document\" or \"script\".\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/destination)"
            },
            "headers": {
              "$ref": "#/definitions/Headers",
              "description": "Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the \"Host\" header.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/headers)"
            },
            "integrity": {
              "type": "string",
              "description": "Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/integrity)"
            },
            "keepalive": {
              "type": "boolean",
              "description": "Returns a boolean indicating whether or not request can outlive the global in which it was created.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/keepalive)"
            },
            "method": {
              "type": "string",
              "description": "Returns request's HTTP method, which is \"GET\" by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/method)"
            },
            "mode": {
              "$ref": "#/definitions/RequestMode",
              "description": "Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/mode)"
            },
            "redirect": {
              "$ref": "#/definitions/RequestRedirect",
              "description": "Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/redirect)"
            },
            "referrer": {
              "type": "string",
              "description": "Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and \"about:client\" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrer)"
            },
            "referrerPolicy": {
              "$ref": "#/definitions/ReferrerPolicy",
              "description": "Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/referrerPolicy)"
            },
            "signal": {
              "$ref": "#/definitions/AbortSignal",
              "description": "Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/signal)"
            },
            "url": {
              "type": "string",
              "description": "Returns the URL of request as a string.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request/url)"
            }
          },
          "required": [
            "body",
            "bodyUsed",
            "cache",
            "credentials",
            "destination",
            "headers",
            "integrity",
            "keepalive",
            "method",
            "mode",
            "redirect",
            "referrer",
            "referrerPolicy",
            "signal",
            "url"
          ],
          "additionalProperties": false,
          "description": "This Fetch API interface represents a resource request.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Request)"
        },
        "ReadableStream<Uint8Array>": {
          "type": "object",
          "properties": {
            "locked": {
              "type": "boolean",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
            }
          },
          "required": [
            "locked"
          ],
          "additionalProperties": false,
          "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
        },
        "RequestCache": {
          "type": "string",
          "enum": [
            "default",
            "force-cache",
            "no-cache",
            "no-store",
            "only-if-cached",
            "reload"
          ]
        },
        "RequestCredentials": {
          "type": "string",
          "enum": [
            "include",
            "omit",
            "same-origin"
          ]
        },
        "RequestDestination": {
          "type": "string",
          "enum": [
            "",
            "audio",
            "audioworklet",
            "document",
            "embed",
            "font",
            "frame",
            "iframe",
            "image",
            "manifest",
            "object",
            "paintworklet",
            "report",
            "script",
            "sharedworker",
            "style",
            "track",
            "video",
            "worker",
            "xslt"
          ]
        },
        "Headers": {
          "type": "object",
          "additionalProperties": false
        },
        "RequestMode": {
          "type": "string",
          "enum": [
            "cors",
            "navigate",
            "no-cors",
            "same-origin"
          ]
        },
        "RequestRedirect": {
          "type": "string",
          "enum": [
            "error",
            "follow",
            "manual"
          ]
        },
        "ReferrerPolicy": {
          "type": "string",
          "enum": [
            "",
            "no-referrer",
            "no-referrer-when-downgrade",
            "origin",
            "origin-when-cross-origin",
            "same-origin",
            "strict-origin",
            "strict-origin-when-cross-origin",
            "unsafe-url"
          ]
        },
        "AbortSignal": {
          "type": "object",
          "properties": {
            "aborted": {
              "type": "boolean",
              "description": "Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/aborted)"
            },
            "onabort": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "isFunction": {
                      "type": "boolean",
                      "const": true
                    }
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/abort_event)"
            },
            "reason": {
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal/reason)"
            }
          },
          "required": [
            "aborted",
            "onabort",
            "reason"
          ],
          "additionalProperties": false,
          "description": "A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/AbortSignal)"
        },
        "RequestInit": {
          "type": "object",
          "properties": {
            "body": {
              "anyOf": [
                {
                  "$ref": "#/definitions/BodyInit"
                },
                {
                  "type": "null"
                }
              ],
              "description": "A BodyInit object or null to set request's body."
            },
            "cache": {
              "$ref": "#/definitions/RequestCache",
              "description": "A string indicating how the request will interact with the browser's cache to set request's cache."
            },
            "credentials": {
              "$ref": "#/definitions/RequestCredentials",
              "description": "A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials."
            },
            "headers": {
              "$ref": "#/definitions/HeadersInit",
              "description": "A Headers object, an object literal, or an array of two-item arrays to set request's headers."
            },
            "integrity": {
              "type": "string",
              "description": "A cryptographic hash of the resource to be fetched by request. Sets request's integrity."
            },
            "keepalive": {
              "type": "boolean",
              "description": "A boolean to set request's keepalive."
            },
            "method": {
              "type": "string",
              "description": "A string to set request's method."
            },
            "mode": {
              "$ref": "#/definitions/RequestMode",
              "description": "A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode."
            },
            "redirect": {
              "$ref": "#/definitions/RequestRedirect",
              "description": "A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect."
            },
            "referrer": {
              "type": "string",
              "description": "A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer."
            },
            "referrerPolicy": {
              "$ref": "#/definitions/ReferrerPolicy",
              "description": "A referrer policy to set request's referrerPolicy."
            },
            "signal": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AbortSignal"
                },
                {
                  "type": "null"
                }
              ],
              "description": "An AbortSignal to set request's signal."
            },
            "window": {
              "type": "null",
              "description": "Can only be null. Used to disassociate request from any Window."
            }
          },
          "additionalProperties": false
        },
        "BodyInit": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReadableStream"
            },
            {
              "$ref": "#/definitions/XMLHttpRequestBodyInit"
            }
          ]
        },
        "ReadableStream": {
          "type": "object",
          "properties": {
            "locked": {
              "type": "boolean",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream/locked)"
            }
          },
          "required": [
            "locked"
          ],
          "additionalProperties": false,
          "description": "This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/ReadableStream)"
        },
        "XMLHttpRequestBodyInit": {
          "anyOf": [
            {
              "$ref": "#/definitions/Blob"
            },
            {
              "$ref": "#/definitions/BufferSource"
            },
            {
              "$ref": "#/definitions/FormData"
            },
            {
              "$ref": "#/definitions/URLSearchParams"
            },
            {
              "type": "string"
            }
          ]
        },
        "Blob": {
          "type": "object",
          "properties": {
            "size": {
              "type": "number",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size)"
            },
            "type": {
              "type": "string",
              "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type)"
            }
          },
          "required": [
            "size",
            "type"
          ],
          "additionalProperties": false,
          "description": "A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)"
        },
        "BufferSource": {
          "anyOf": [
            {
              "$ref": "#/definitions/ArrayBufferView"
            },
            {
              "$ref": "#/definitions/ArrayBuffer"
            }
          ]
        },
        "ArrayBufferView": {
          "type": "object",
          "properties": {
            "buffer": {
              "$ref": "#/definitions/ArrayBufferLike"
            },
            "byteLength": {
              "type": "number"
            },
            "byteOffset": {
              "type": "number"
            }
          },
          "required": [
            "buffer",
            "byteLength",
            "byteOffset"
          ],
          "additionalProperties": false
        },
        "ArrayBufferLike": {
          "$ref": "#/definitions/ArrayBuffer"
        },
        "ArrayBuffer": {
          "type": "object",
          "properties": {
            "byteLength": {
              "type": "number"
            }
          },
          "required": [
            "byteLength"
          ],
          "additionalProperties": false
        },
        "FormData": {
          "type": "object",
          "additionalProperties": false
        },
        "URLSearchParams": {
          "type": "object",
          "additionalProperties": false
        },
        "HeadersInit": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 2,
                "maxItems": 2
              }
            },
            {
              "$ref": "#/definitions/Record%3Cstring%2Cstring%3E"
            },
            {
              "$ref": "#/definitions/Headers"
            }
          ]
        },
        "Record<string,string>": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/util/getSchemaAtDotLocation.ts",
    "name": "NamedParameters<typeof getSchemaAtDotLocation>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/util/getSchemaAtDotLocation.ts",
    "operationRelativePath": "src/util/getSchemaAtDotLocation.ts",
    "error": "Error: Encountered a reference to a missing definition: \"#/definitions/interface-1366410753-558-3934-1366410753-0-8112\". This is a bug."
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/serverless-vercel-kv/executeServerless.ts",
    "name": "NamedParameters<typeof executeServerless>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/serverless-vercel-kv/executeServerless.ts",
    "operationRelativePath": "src/serverless-vercel-kv/executeServerless.ts",
    "error": "Error: Encountered a reference to a missing definition: \"#/definitions/ExecuteContext\". This is a bug."
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/serverless-vercel-kv/vercelKvStore.ts",
    "name": "NamedParameters<typeof putData>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/serverless-vercel-kv/vercelKvStore.ts",
    "operationRelativePath": "src/serverless-vercel-kv/vercelKvStore.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20putData%3E",
      "definitions": {
        "NamedParameters<typeof putData>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "value": {}
          },
          "required": [
            "databaseId",
            "key",
            "value"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/serverless-vercel-kv/vercelKvStore.ts",
    "name": "NamedParameters<typeof getStoreData>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/serverless-vercel-kv/vercelKvStore.ts",
    "operationRelativePath": "src/serverless-vercel-kv/vercelKvStore.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20getStoreData%3E",
      "definitions": {
        "NamedParameters<typeof getStoreData>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string"
            }
          },
          "required": [
            "databaseId"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/serverless-vercel-kv/executeApi.ts",
    "name": "NamedParameters<typeof executeApi>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/serverless-vercel-kv/executeApi.ts",
    "operationRelativePath": "src/serverless-vercel-kv/executeApi.ts",
    "error": "TypeError: WeakMap keys must be objects or non-registered symbols"
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/server-fs-lmdb/executeGridPluginWorker.ts",
    "name": "NamedParameters<typeof executeGridPluginWorker>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/server-fs-lmdb/executeGridPluginWorker.ts",
    "operationRelativePath": "src/server-fs-lmdb/executeGridPluginWorker.ts",
    "error": "Error: Could not translate intersection to union."
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/server-fs-lmdb/setValue.ts",
    "name": "NamedParameters<typeof setValue>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/server-fs-lmdb/setValue.ts",
    "operationRelativePath": "src/server-fs-lmdb/setValue.ts",
    "error": "Error: Encountered a reference to a missing definition: \"#/definitions/interface-1366410753-558-3934-1366410753-0-8112\". This is a bug."
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/server-fs-lmdb/storage/getDb.ts",
    "name": "NamedParameters<typeof getDb>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/server-fs-lmdb/storage/getDb.ts",
    "operationRelativePath": "src/server-fs-lmdb/storage/getDb.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20getDb%3E",
      "definitions": {
        "NamedParameters<typeof getDb>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string"
            }
          },
          "required": [
            "databaseId"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/server-fs-lmdb/storage/getActionSchema.ts",
    "name": "NamedParameters<typeof getActionSchema>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/server-fs-lmdb/storage/getActionSchema.ts",
    "operationRelativePath": "src/server-fs-lmdb/storage/getActionSchema.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20getActionSchema%3E",
      "definitions": {
        "NamedParameters<typeof getActionSchema>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string"
            }
          },
          "required": [
            "databaseId"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/server-fs-lmdb/storage/getStatusDb.ts",
    "name": "NamedParameters<typeof getStatusDb>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/server-fs-lmdb/storage/getStatusDb.ts",
    "operationRelativePath": "src/server-fs-lmdb/storage/getStatusDb.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20getStatusDb%3E",
      "definitions": {
        "NamedParameters<typeof getStatusDb>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string"
            }
          },
          "required": [
            "databaseId"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/server-fs-lmdb/storage/getValue.ts",
    "name": "NamedParameters<typeof getValue>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/server-fs-lmdb/storage/getValue.ts",
    "operationRelativePath": "src/server-fs-lmdb/storage/getValue.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20getValue%3E",
      "definitions": {
        "NamedParameters<typeof getValue>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string"
            },
            "dotLocation": {
              "type": "string",
              "description": "Will find all locations starting with this"
            }
          },
          "required": [
            "databaseId",
            "dotLocation"
          ],
          "additionalProperties": false
        }
      }
    }
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/server-fs-lmdb/executeGridPlugin.ts",
    "name": "NamedParameters<typeof executeGridPlugin>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/server-fs-lmdb/executeGridPlugin.ts",
    "operationRelativePath": "src/server-fs-lmdb/executeGridPlugin.ts",
    "error": "Error: Encountered a reference to a missing definition: \"#/definitions/interface-1366410753-558-3934-1366410753-0-8112\". This is a bug."
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/server-fs-lmdb/setPropertyStatusDone.ts",
    "name": "NamedParameters<typeof setPropertyStatusDone>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/server-fs-lmdb/setPropertyStatusDone.ts",
    "operationRelativePath": "src/server-fs-lmdb/setPropertyStatusDone.ts",
    "error": "Error: Encountered a reference to a missing definition: \"#/definitions/interface-1366410753-558-3934-1366410753-0-8112\". This is a bug."
  },
  {
    "modelName": "SchemaItem",
    "projectRelativePath": "packages/actionschema/actionschema/src/server-fs-lmdb/spawner.test.ts",
    "name": "NamedParameters<typeof spawner>",
    "absolutePath": "/Users/king/os/packages/actionschema/actionschema/src/server-fs-lmdb/spawner.test.ts",
    "operationRelativePath": "src/server-fs-lmdb/spawner.test.ts",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$ref": "#/definitions/NamedParameters%3Ctypeof%20spawner%3E",
      "definitions": {
        "NamedParameters<typeof spawner>": {
          "type": "object",
          "properties": {
            "databaseId": {
              "type": "string"
            }
          },
          "required": [
            "databaseId"
          ],
          "additionalProperties": false
        }
      }
    }
  }
]